# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isValidBST(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        if root is None:
            return True
        if root.left is None and root.right is None:
            return True
        
        temp = []
        self.helper(root,temp)
        for i in range(1,len(temp)):
            if temp[i] <= temp[i-1]:
                return False
        return True
        
        
    def helper(self,root,temp):
        if root is None:
            return temp
        if root.left:
            self.helper(root.left,temp)
        temp.append(root.val)
        if root.right:
            self.helper(root.right,temp)
        
